# Cline Rules

These rules define the workflow and maintenance practices for this project:

3. Add or remove .clinerules rules or actions if necessary
4. Ignore all linter errors (HIGH PRIORITY)

## Frontend Standards

5. Ensure responsive design for all screen sizes and devices
6. Maintain semantic HTML structure for accessibility and SEO
7. Follow a consistent naming convention for CSS classes (BEM recommended)
8. Optimize images and assets for web performance
9. Implement proper error handling and form validation
10. Ensure cross-browser compatibility
11. Follow security best practices (sanitize inputs, prevent XSS, etc.)
12. Use progressive enhancement where possible
13. Implement proper caching strategies
14. Keep JavaScript modular and maintainable
15. Document code with clear comments and documentation
16. Ensure WCAG accessibility compliance
17. Implement proper SEO meta tags and structured data
18. Use version control effectively with meaningful commit messages
19. Conduct regular code reviews and testing
20. Optimize for Core Web Vitals (LCP, FID, CLS)
21. Implement proper logging for debugging and monitoring

## Backend Standards

22. Always use Swagger or OpenAPI for API documentation
23. Always implement best API security practices (authentication, authorization, input validation)
24. Keep code as simple as possible
25. Use appropriate design patterns for scalability and maintainability
26. Implement comprehensive error handling and logging
27. Follow RESTful API design principles
28. Optimize database queries and connections
29. Implement proper rate limiting and request throttling
30. Use environment variables for configuration
31. Implement proper data validation and sanitization

## General Standards

32. Follow KISS (Keep It Simple, Stupid) principles
33. Always keep code and solutions as simple as possible
34. Add thorough documentation in the code
35. Use consistent coding style and formatting
36. Write clean, readable, and maintainable code
37. Follow DRY (Don't Repeat Yourself) principles
38. Conduct regular code reviews
39. Write unit and integration tests
40. Refactor code when necessary
41. Stay updated with best practices and security vulnerabilities
42. Follow Conventional Commits for commit messages
43. Always keep .gitignore updated
